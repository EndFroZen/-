#include <stdio.h>
#include "driver/gpio.h"
#include <inttypes.h>
#include <esp_timer.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "freertos/queue.h"
#include <string.h>
#define GPIO_OUTPUT_IO_0 18
#define GPIO_OUTPUT_IO_1 19
#define GPIO_OUTPUT_PIN_SEL ((1ULL<<GPIO_OUTPUT_IO_0) | (1ULL<<GPIO_OUTPUT_IO_1))

#define GPIO_INPUT_IO_0 16
#define GPIO_INPUT_IO_1 17
#define GPIO_INPUT_IO_2 5
#define GPIO_INPUT_PIN_POLL_SEL ((1Ull<<GPIO_INPUT_IO_0) | (1ULL<<GPIO_INPUT_IO_1))
#define GPIO_INPUT_PIN_INTR_SEL (1ULL<<GPIO_INPUT_IO_2)
int numofselect = 0;
int numforspace=0;
char mosrecode[20];
int scal=0;
int boolean=0;
#define ESP_INTR_FLAG_DEFAULT 0
static QueueHandle_t gpio_evt_queue = NULL;

static void IRAM_ATTR gpio_isr_handler(void* arg)
{
    uint32_t gpio_num = (uint32_t)arg;
    xQueueSendFromISR(gpio_evt_queue, &gpio_num,NULL);
}
int b = 2;

static void gpio_task_example(void* arg)
{
    uint32_t io_num;
    for(;;){
        if(xQueueReceive(gpio_evt_queue, &io_num, portMAX_DELAY)) {
            printf("GPIO[%"PRIu32"] intr, val: %d\n",io_num,gpio_get_level(io_num));
            
        }
        if(gpio_get_level(io_num) == 0){
            b++;
             int c = b % 2;
            gpio_set_level(GPIO_OUTPUT_IO_1, c);
        }

    }
}

void app_main(void)
{

gpio_config_t io_conf = {};

//INPUT

io_conf.intr_type = GPIO_INTR_DISABLE;
io_conf.mode = GPIO_MODE_INPUT;
io_conf.pin_bit_mask = GPIO_INPUT_PIN_POLL_SEL;
io_conf.pull_down_en = 0;
io_conf.pull_up_en = 1;
gpio_config(&io_conf);


gpio_install_isr_service(ESP_INTR_FLAG_DEFAULT);
gpio_isr_handler_add(GPIO_INPUT_IO_2, gpio_isr_handler, (void*)GPIO_INPUT_IO_2);
gpio_evt_queue = xQueueCreate(10, sizeof(uint32_t));
xTaskCreate(gpio_task_example, "gpio_task_example",2048, NULL, 10,NULL);

for(;;){
    
    vTaskDelay(100 / portTICK_PERIOD_MS);
    // printf("GPIO[%d] poll, val: %d\n",GPIO_INPUT_IO_0,gpio_get_level(GPIO_INPUT_IO_0));
    if(gpio_get_level(GPIO_INPUT_IO_0)==0){
      boolean++;
      printf("%d\n",boolean);
      vTaskDelay(100 / portTICK_PERIOD_MS);
      if(gpio_get_level(GPIO_INPUT_IO_0)==1){
      numofselect++;
      vTaskDelay(100 / portTICK_PERIOD_MS);
      if(boolean>=1&&boolean<=3){
        char dot = '.';
        mosrecode[scal]=dot;
        boolean=0;
        scal++;
        printf("%s\n",mosrecode);
      }else if(boolean>3){
        char dach = '-';
        mosrecode[scal]=dach;
        boolean=0;
        scal++;
        printf("%s\n",mosrecode);
      }
    else if (numofselect==10){
    if(strcmp(mosrecode, ".-")==0){
        printf("A");
    }else if(strcmp(mosrecode, "-...")==0){
        printf("B");
    }else if(strcmp(mosrecode, "-.-.")==0){
        printf("C");
    }else if(strcmp(mosrecode, "-...")==0){
        printf("D");
    }else if(strcmp(mosrecode, ".")==0){
        printf("E");
    }else if(strcmp(mosrecode, "..-.")==0){
        printf("F");
    }else if(strcmp(mosrecode, "--.")==0){
        printf("G");
    }else if(strcmp(mosrecode, "....")==0){
        printf("H");
    }else if(strcmp(mosrecode, "..")==0){
        printf("I");
    }else if(strcmp(mosrecode, ".---")==0){
        printf("J");
    }else if(strcmp(mosrecode, "-.-")==0){
        printf("K");
    }else if(strcmp(mosrecode, ".-..")==0){
        printf("L");
    }else if(strcmp(mosrecode, "--")==0){
        printf("M");
    }else if(strcmp(mosrecode, "-.")==0){
        printf("N");
    }else if(strcmp(mosrecode, "---")==0){
        printf("O");
    }else if(strcmp(mosrecode, ".--.")==0){
        printf("P");
    }else if(strcmp(mosrecode, "--.-")==0){
        printf("Q");
    }else if(strcmp(mosrecode, ".-.")==0){
        printf("R");
    }else if(strcmp(mosrecode, "...")==0){
        printf("S");
    }else if(strcmp(mosrecode, "-")==0){
        printf("T");
    }else if(strcmp(mosrecode, "..-")==0){
        printf("U");
    }else if(strcmp(mosrecode, "...-")==0){
        printf("V");
    }else if(strcmp(mosrecode, ".--")==0){
        printf("W");
    }else if(strcmp(mosrecode, "-..-")==0){
        printf("X");
    }else if(strcmp(mosrecode, "-.--")==0){
        printf("Y");
    }else if(strcmp(mosrecode, "--..")==0){
        printf("Z");
    }else if(strcmp(mosrecode, ".----")==0){
        printf("1");
    }else if(strcmp(mosrecode, "..---")==0){
        printf("2");
    }else if(strcmp(mosrecode, "...--")==0){
        printf("3");
    }else if(strcmp(mosrecode, "....-")==0){
        printf("4");
    }else if(strcmp(mosrecode, ".....")==0){
        printf("5 ");
    }else if(strcmp(mosrecode, "-....")==0){
        printf("6");
    }else if(strcmp(mosrecode, "--...")==0){
        printf("7");
    }else if(strcmp(mosrecode, "---..")==0){
        printf("8");
    }else if(strcmp(mosrecode, "----.")==0){
        printf("9");
    }else if(strcmp(mosrecode, "-----")==0){
        printf("0");
    }
            }
            for(int i = 0;i<20;i++){
                mosrecode[i] = '\0';
            }
            numforspace++;
            scal=0;
            numofselect = 0;
        }else if(numforspace== 2){
            printf(" ");
            numforspace = 0;
            numofselect = 0;
        }else{
            continue;
        }
        } 
        
      }
      
    }

